[0m[[0m[31merror[0m] [0m[0morg.apache.spark.sql.catalyst.errors.package$TreeNodeException: execute, tree:[0m
[0m[[0m[31merror[0m] [0m[0mExchange SinglePartition[0m
[0m[[0m[31merror[0m] [0m[0m+- *(2) LocalLimit 10[0m
[0m[[0m[31merror[0m] [0m[0m   +- *(2) HashAggregate(keys=[Date#42], functions=[sum(cast(QTY#16 as bigint))], output=[Date#42, sum(QTY)#155L])[0m
[0m[[0m[31merror[0m] [0m[0m      +- Exchange hashpartitioning(Date#42, 200)[0m
[0m[[0m[31merror[0m] [0m[0m         +- *(1) HashAggregate(keys=[Date#42], functions=[partial_sum(cast(QTY#16 as bigint))], output=[Date#42, sum#167L])[0m
[0m[[0m[31merror[0m] [0m[0m            +- *(1) Project [QTY#16, split(cast(Date_Time#19 as string),  )[0] AS Date#42][0m
[0m[[0m[31merror[0m] [0m[0m               +- *(1) FileScan csv [QTY#16,Date_Time#19] Batched: false, Format: CSV, Location: InMemoryFileIndex[file:/C:/Users/Khoa/Desktop/TEAM1/inputs/ecommerce-team3.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<QTY:int,Date_Time:timestamp>[0m
[0m[[0m[31merror[0m] [0m[0m[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.catalyst.errors.package$.attachTree(package.scala:56)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.exchange.ShuffleExchangeExec.doExecute(ShuffleExchangeExec.scala:119)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:131)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:127)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan$$anonfun$executeQuery$1.apply(SparkPlan.scala:155)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:152)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:127)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.InputAdapter.inputRDDs(WholeStageCodegenExec.scala:371)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.BaseLimitExec$class.inputRDDs(limit.scala:62)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.GlobalLimitExec.inputRDDs(limit.scala:107)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.ProjectExec.inputRDDs(basicPhysicalOperators.scala:41)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.WholeStageCodegenExec.doExecute(WholeStageCodegenExec.scala:605)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:131)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:127)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan$$anonfun$executeQuery$1.apply(SparkPlan.scala:155)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:152)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:127)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan.getByteArrayRdd(SparkPlan.scala:247)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan.executeTake(SparkPlan.scala:337)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.CollectLimitExec.executeCollect(limit.scala:38)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.Dataset.org$apache$spark$sql$Dataset$$collectFromPlan(Dataset.scala:3278)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.Dataset$$anonfun$head$1.apply(Dataset.scala:2489)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.Dataset$$anonfun$head$1.apply(Dataset.scala:2489)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.Dataset$$anonfun$52.apply(Dataset.scala:3259)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:77)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.Dataset.withAction(Dataset.scala:3258)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.Dataset.head(Dataset.scala:2489)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.Dataset.take(Dataset.scala:2703)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.Dataset.showString(Dataset.scala:254)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.Dataset.show(Dataset.scala:723)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.Dataset.show(Dataset.scala:682)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.Dataset.show(Dataset.scala:691)[0m
[0m[[0m[31merror[0m] [0m[0m	at Team1$.main(Team1.scala:135)[0m
[0m[[0m[31merror[0m] [0m[0m	at Team1.main(Team1.scala)[0m
[0m[[0m[31merror[0m] [0m[0m	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)[0m
[0m[[0m[31merror[0m] [0m[0m	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)[0m
[0m[[0m[31merror[0m] [0m[0m	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)[0m
[0m[[0m[31merror[0m] [0m[0m	at java.lang.reflect.Method.invoke(Unknown Source)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.Run.invokeMain(Run.scala:143)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.Run.execute$1(Run.scala:93)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.Run.$anonfun$runWithLoader$5(Run.scala:120)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.Run$.executeSuccess(Run.scala:186)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.Run.runWithLoader(Run.scala:120)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.Defaults$.$anonfun$bgRunTask$6(Defaults.scala:1983)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.Defaults$.$anonfun$termWrapper$2(Defaults.scala:1922)[0m
[0m[[0m[31merror[0m] [0m[0m	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)[0m
[0m[[0m[31merror[0m] [0m[0m	at scala.util.Try$.apply(Try.scala:213)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.internal.BackgroundThreadPool$BackgroundRunnable.run(DefaultBackgroundJobService.scala:369)[0m
[0m[[0m[31merror[0m] [0m[0m	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)[0m
[0m[[0m[31merror[0m] [0m[0m	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)[0m
[0m[[0m[31merror[0m] [0m[0m	at java.lang.Thread.run(Unknown Source)[0m
[0m[[0m[31merror[0m] [0m[0mCaused by: org.apache.spark.sql.catalyst.errors.package$TreeNodeException: execute, tree:[0m
[0m[[0m[31merror[0m] [0m[0mExchange hashpartitioning(Date#42, 200)[0m
[0m[[0m[31merror[0m] [0m[0m+- *(1) HashAggregate(keys=[Date#42], functions=[partial_sum(cast(QTY#16 as bigint))], output=[Date#42, sum#167L])[0m
[0m[[0m[31merror[0m] [0m[0m   +- *(1) Project [QTY#16, split(cast(Date_Time#19 as string),  )[0] AS Date#42][0m
[0m[[0m[31merror[0m] [0m[0m      +- *(1) FileScan csv [QTY#16,Date_Time#19] Batched: false, Format: CSV, Location: InMemoryFileIndex[file:/C:/Users/Khoa/Desktop/TEAM1/inputs/ecommerce-team3.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<QTY:int,Date_Time:timestamp>[0m
[0m[[0m[31merror[0m] [0m[0m[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.catalyst.errors.package$.attachTree(package.scala:56)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.exchange.ShuffleExchangeExec.doExecute(ShuffleExchangeExec.scala:119)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:131)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:127)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan$$anonfun$executeQuery$1.apply(SparkPlan.scala:155)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:152)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:127)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.InputAdapter.inputRDDs(WholeStageCodegenExec.scala:371)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.aggregate.HashAggregateExec.inputRDDs(HashAggregateExec.scala:150)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.BaseLimitExec$class.inputRDDs(limit.scala:62)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.LocalLimitExec.inputRDDs(limit.scala:97)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.WholeStageCodegenExec.doExecute(WholeStageCodegenExec.scala:605)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:131)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:127)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan$$anonfun$executeQuery$1.apply(SparkPlan.scala:155)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:152)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:127)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.exchange.ShuffleExchangeExec.prepareShuffleDependency(ShuffleExchangeExec.scala:92)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.exchange.ShuffleExchangeExec$$anonfun$doExecute$1.apply(ShuffleExchangeExec.scala:128)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.exchange.ShuffleExchangeExec$$anonfun$doExecute$1.apply(ShuffleExchangeExec.scala:119)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.catalyst.errors.package$.attachTree(package.scala:52)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.exchange.ShuffleExchangeExec.doExecute(ShuffleExchangeExec.scala:119)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:131)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:127)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan$$anonfun$executeQuery$1.apply(SparkPlan.scala:155)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:152)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:127)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.InputAdapter.inputRDDs(WholeStageCodegenExec.scala:371)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.BaseLimitExec$class.inputRDDs(limit.scala:62)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.GlobalLimitExec.inputRDDs(limit.scala:107)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.ProjectExec.inputRDDs(basicPhysicalOperators.scala:41)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.WholeStageCodegenExec.doExecute(WholeStageCodegenExec.scala:605)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:131)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:127)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan$$anonfun$executeQuery$1.apply(SparkPlan.scala:155)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:152)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:127)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan.getByteArrayRdd(SparkPlan.scala:247)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan.executeTake(SparkPlan.scala:337)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.CollectLimitExec.executeCollect(limit.scala:38)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.Dataset.org$apache$spark$sql$Dataset$$collectFromPlan(Dataset.scala:3278)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.Dataset$$anonfun$head$1.apply(Dataset.scala:2489)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.Dataset$$anonfun$head$1.apply(Dataset.scala:2489)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.Dataset$$anonfun$52.apply(Dataset.scala:3259)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:77)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.Dataset.withAction(Dataset.scala:3258)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.Dataset.head(Dataset.scala:2489)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.Dataset.take(Dataset.scala:2703)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.Dataset.showString(Dataset.scala:254)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.Dataset.show(Dataset.scala:723)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.Dataset.show(Dataset.scala:682)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.Dataset.show(Dataset.scala:691)[0m
[0m[[0m[31merror[0m] [0m[0m	at Team1$.main(Team1.scala:135)[0m
[0m[[0m[31merror[0m] [0m[0m	at Team1.main(Team1.scala)[0m
[0m[[0m[31merror[0m] [0m[0m	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)[0m
[0m[[0m[31merror[0m] [0m[0m	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)[0m
[0m[[0m[31merror[0m] [0m[0m	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)[0m
[0m[[0m[31merror[0m] [0m[0m	at java.lang.reflect.Method.invoke(Unknown Source)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.Run.invokeMain(Run.scala:143)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.Run.execute$1(Run.scala:93)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.Run.$anonfun$runWithLoader$5(Run.scala:120)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.Run$.executeSuccess(Run.scala:186)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.Run.runWithLoader(Run.scala:120)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.Defaults$.$anonfun$bgRunTask$6(Defaults.scala:1983)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.Defaults$.$anonfun$termWrapper$2(Defaults.scala:1922)[0m
[0m[[0m[31merror[0m] [0m[0m	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)[0m
[0m[[0m[31merror[0m] [0m[0m	at scala.util.Try$.apply(Try.scala:213)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.internal.BackgroundThreadPool$BackgroundRunnable.run(DefaultBackgroundJobService.scala:369)[0m
[0m[[0m[31merror[0m] [0m[0m	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)[0m
[0m[[0m[31merror[0m] [0m[0m	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)[0m
[0m[[0m[31merror[0m] [0m[0m	at java.lang.Thread.run(Unknown Source)[0m
[0m[[0m[31merror[0m] [0m[0mCaused by: java.lang.IllegalStateException: Cannot call methods on a stopped SparkContext.[0m
[0m[[0m[31merror[0m] [0m[0mThis stopped SparkContext was created at:[0m
[0m[[0m[31merror[0m] [0m[0m[0m
[0m[[0m[31merror[0m] [0m[0morg.apache.spark.sql.SparkSession$Builder.getOrCreate(SparkSession.scala:925)[0m
[0m[[0m[31merror[0m] [0m[0mTeam1$.main(Team1.scala:15)[0m
[0m[[0m[31merror[0m] [0m[0mTeam1.main(Team1.scala)[0m
[0m[[0m[31merror[0m] [0m[0msun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)[0m
[0m[[0m[31merror[0m] [0m[0msun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)[0m
[0m[[0m[31merror[0m] [0m[0msun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)[0m
[0m[[0m[31merror[0m] [0m[0mjava.lang.reflect.Method.invoke(Unknown Source)[0m
[0m[[0m[31merror[0m] [0m[0msbt.Run.invokeMain(Run.scala:143)[0m
[0m[[0m[31merror[0m] [0m[0msbt.Run.execute$1(Run.scala:93)[0m
[0m[[0m[31merror[0m] [0m[0msbt.Run.$anonfun$runWithLoader$5(Run.scala:120)[0m
[0m[[0m[31merror[0m] [0m[0msbt.Run$.executeSuccess(Run.scala:186)[0m
[0m[[0m[31merror[0m] [0m[0msbt.Run.runWithLoader(Run.scala:120)[0m
[0m[[0m[31merror[0m] [0m[0msbt.Defaults$.$anonfun$bgRunTask$6(Defaults.scala:1983)[0m
[0m[[0m[31merror[0m] [0m[0msbt.Defaults$.$anonfun$termWrapper$2(Defaults.scala:1922)[0m
[0m[[0m[31merror[0m] [0m[0mscala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)[0m
[0m[[0m[31merror[0m] [0m[0mscala.util.Try$.apply(Try.scala:213)[0m
[0m[[0m[31merror[0m] [0m[0msbt.internal.BackgroundThreadPool$BackgroundRunnable.run(DefaultBackgroundJobService.scala:369)[0m
[0m[[0m[31merror[0m] [0m[0mjava.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)[0m
[0m[[0m[31merror[0m] [0m[0mjava.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)[0m
[0m[[0m[31merror[0m] [0m[0mjava.lang.Thread.run(Unknown Source)[0m
[0m[[0m[31merror[0m] [0m[0m[0m
[0m[[0m[31merror[0m] [0m[0mThe currently active SparkContext was created at:[0m
[0m[[0m[31merror[0m] [0m[0m[0m
[0m[[0m[31merror[0m] [0m[0m(No active SparkContext.)[0m
[0m[[0m[31merror[0m] [0m[0m         [0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.SparkContext.assertNotStopped(SparkContext.scala:99)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.SparkContext.broadcast(SparkContext.scala:1479)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.datasources.csv.CSVFileFormat.buildReader(CSVFileFormat.scala:96)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.datasources.FileFormat$class.buildReaderWithPartitionValues(FileFormat.scala:129)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.datasources.TextBasedFileFormat.buildReaderWithPartitionValues(FileFormat.scala:160)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.FileSourceScanExec.inputRDD$lzycompute(DataSourceScanExec.scala:297)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.FileSourceScanExec.inputRDD(DataSourceScanExec.scala:295)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.FileSourceScanExec.inputRDDs(DataSourceScanExec.scala:315)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.ProjectExec.inputRDDs(basicPhysicalOperators.scala:41)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.aggregate.HashAggregateExec.inputRDDs(HashAggregateExec.scala:150)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.WholeStageCodegenExec.doExecute(WholeStageCodegenExec.scala:605)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:131)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:127)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan$$anonfun$executeQuery$1.apply(SparkPlan.scala:155)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:152)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:127)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.exchange.ShuffleExchangeExec.prepareShuffleDependency(ShuffleExchangeExec.scala:92)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.exchange.ShuffleExchangeExec$$anonfun$doExecute$1.apply(ShuffleExchangeExec.scala:128)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.exchange.ShuffleExchangeExec$$anonfun$doExecute$1.apply(ShuffleExchangeExec.scala:119)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.catalyst.errors.package$.attachTree(package.scala:52)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.exchange.ShuffleExchangeExec.doExecute(ShuffleExchangeExec.scala:119)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:131)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:127)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan$$anonfun$executeQuery$1.apply(SparkPlan.scala:155)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:152)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:127)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.InputAdapter.inputRDDs(WholeStageCodegenExec.scala:371)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.aggregate.HashAggregateExec.inputRDDs(HashAggregateExec.scala:150)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.BaseLimitExec$class.inputRDDs(limit.scala:62)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.LocalLimitExec.inputRDDs(limit.scala:97)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.WholeStageCodegenExec.doExecute(WholeStageCodegenExec.scala:605)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:131)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:127)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan$$anonfun$executeQuery$1.apply(SparkPlan.scala:155)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:152)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:127)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.exchange.ShuffleExchangeExec.prepareShuffleDependency(ShuffleExchangeExec.scala:92)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.exchange.ShuffleExchangeExec$$anonfun$doExecute$1.apply(ShuffleExchangeExec.scala:128)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.exchange.ShuffleExchangeExec$$anonfun$doExecute$1.apply(ShuffleExchangeExec.scala:119)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.catalyst.errors.package$.attachTree(package.scala:52)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.exchange.ShuffleExchangeExec.doExecute(ShuffleExchangeExec.scala:119)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:131)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:127)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan$$anonfun$executeQuery$1.apply(SparkPlan.scala:155)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:152)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:127)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.InputAdapter.inputRDDs(WholeStageCodegenExec.scala:371)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.BaseLimitExec$class.inputRDDs(limit.scala:62)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.GlobalLimitExec.inputRDDs(limit.scala:107)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.ProjectExec.inputRDDs(basicPhysicalOperators.scala:41)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.WholeStageCodegenExec.doExecute(WholeStageCodegenExec.scala:605)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:131)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:127)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan$$anonfun$executeQuery$1.apply(SparkPlan.scala:155)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:152)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:127)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan.getByteArrayRdd(SparkPlan.scala:247)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SparkPlan.executeTake(SparkPlan.scala:337)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.CollectLimitExec.executeCollect(limit.scala:38)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.Dataset.org$apache$spark$sql$Dataset$$collectFromPlan(Dataset.scala:3278)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.Dataset$$anonfun$head$1.apply(Dataset.scala:2489)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.Dataset$$anonfun$head$1.apply(Dataset.scala:2489)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.Dataset$$anonfun$52.apply(Dataset.scala:3259)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:77)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.Dataset.withAction(Dataset.scala:3258)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.Dataset.head(Dataset.scala:2489)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.Dataset.take(Dataset.scala:2703)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.Dataset.showString(Dataset.scala:254)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.Dataset.show(Dataset.scala:723)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.Dataset.show(Dataset.scala:682)[0m
[0m[[0m[31merror[0m] [0m[0m	at org.apache.spark.sql.Dataset.show(Dataset.scala:691)[0m
[0m[[0m[31merror[0m] [0m[0m	at Team1$.main(Team1.scala:135)[0m
[0m[[0m[31merror[0m] [0m[0m	at Team1.main(Team1.scala)[0m
[0m[[0m[31merror[0m] [0m[0m	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)[0m
[0m[[0m[31merror[0m] [0m[0m	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)[0m
[0m[[0m[31merror[0m] [0m[0m	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)[0m
[0m[[0m[31merror[0m] [0m[0m	at java.lang.reflect.Method.invoke(Unknown Source)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.Run.invokeMain(Run.scala:143)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.Run.execute$1(Run.scala:93)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.Run.$anonfun$runWithLoader$5(Run.scala:120)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.Run$.executeSuccess(Run.scala:186)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.Run.runWithLoader(Run.scala:120)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.Defaults$.$anonfun$bgRunTask$6(Defaults.scala:1983)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.Defaults$.$anonfun$termWrapper$2(Defaults.scala:1922)[0m
[0m[[0m[31merror[0m] [0m[0m	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)[0m
[0m[[0m[31merror[0m] [0m[0m	at scala.util.Try$.apply(Try.scala:213)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.internal.BackgroundThreadPool$BackgroundRunnable.run(DefaultBackgroundJobService.scala:369)[0m
[0m[[0m[31merror[0m] [0m[0m	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)[0m
[0m[[0m[31merror[0m] [0m[0m	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)[0m
[0m[[0m[31merror[0m] [0m[0m	at java.lang.Thread.run(Unknown Source)[0m
[0m[[0m[31merror[0m] [0m[0m(Compile / [31mrun[0m) org.apache.spark.sql.catalyst.errors.package$TreeNodeException: execute, tree:[0m
[0m[[0m[31merror[0m] [0m[0mExchange SinglePartition[0m
[0m[[0m[31merror[0m] [0m[0m+- *(2) LocalLimit 10[0m
[0m[[0m[31merror[0m] [0m[0m   +- *(2) HashAggregate(keys=[Date#42], functions=[sum(cast(QTY#16 as bigint))], output=[Date#42, sum(QTY)#155L])[0m
[0m[[0m[31merror[0m] [0m[0m      +- Exchange hashpartitioning(Date#42, 200)[0m
[0m[[0m[31merror[0m] [0m[0m         +- *(1) HashAggregate(keys=[Date#42], functions=[partial_sum(cast(QTY#16 as bigint))], output=[Date#42, sum#167L])[0m
[0m[[0m[31merror[0m] [0m[0m            +- *(1) Project [QTY#16, split(cast(Date_Time#19 as string),  )[0] AS Date#42][0m
[0m[[0m[31merror[0m] [0m[0m               +- *(1) FileScan csv [QTY#16,Date_Time#19] Batched: false, Format: CSV, Location: InMemoryFileIndex[file:/C:/Users/Khoa/Desktop/TEAM1/inputs/ecommerce-team3.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<QTY:int,Date_Time:timestamp>[0m
